# Generated by Django 5.0.4 on 2024-05-04 13:22

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Debtors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deb_name', models.CharField(max_length=50)),
                ('deb_gstin', models.CharField(max_length=15)),
                ('deb_pan', models.CharField(max_length=10)),
                ('deb_address', models.CharField(max_length=500)),
                ('deb_city', models.CharField(max_length=50)),
                ('deb_state', models.CharField(max_length=50)),
                ('deb_pincode', models.CharField(max_length=6)),
                ('deb_email', models.EmailField(max_length=50)),
                ('deb_mobile', models.CharField(max_length=10)),
                ('deb_telephone', models.CharField(max_length=10)),
                ('deb_remarks', models.CharField(max_length=1500)),
                ('deb_transport', models.CharField(max_length=50)),
                ('deb_contactPerson', models.CharField(max_length=50)),
                ('deb_broker', models.CharField(max_length=50)),
                ('active', models.CharField(default='y', max_length=2)),
                ('dataaddedby', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('dob', models.DateField(blank=True, null=True)),
                ('user_type', models.CharField(blank=True, max_length=2, null=True)),
                ('att', models.ImageField(upload_to='prof_pics/')),
                ('address1', models.CharField(max_length=100)),
                ('address2', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('pincode', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('salary', models.CharField(max_length=50)),
                ('id_proof', models.CharField(max_length=50)),
                ('address_proof', models.CharField(max_length=50)),
                ('bank_ac_no', models.CharField(max_length=50)),
                ('ifsc_code', models.CharField(max_length=50)),
                ('designation', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('permissions', models.ManyToManyField(blank=True, related_name='custom_users', to='auth.permission')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLogCustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('restore', 'Restore')], max_length=10)),
                ('model_name', models.CharField(max_length=255)),
                ('record_id', models.IntegerField()),
                ('timestamp', models.DateTimeField(default=datetime.datetime.now)),
                ('username', models.CharField(max_length=255)),
                ('previous_data', models.TextField(blank=True, null=True)),
                ('new_data', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
